name: Create pull request for develop branches
on:
  workflow_dispatch:

jobs:
  create-develop-pr:
    runs-on: ubuntu-latest
    name: Create PR from `develop` to `main` for multiple repositories
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read repositories from file
        id: read-repos
        run: |
            repos_content=""
            while IFS= read -r line; do
            repo_name=$(echo "$line" | sed -e 's/^- //' -e 's/:develop//')
            repos_content+="$repo_name "
            done < repos.md
            echo -e "::set-output name=repos::$repos_content"
        shell: bash
      - name: Checkout & Rebase `develop` branch to latest `origin/main`
        run: |
          for repo in ${{ steps.read-repos.outputs.repos }}; do
            default_branch=$(gh api /repos/$repo -q '.default_branch')
            echo $repo / $default_branch
            git config --global user.email "thanh.lam@nationalarchives.gov.uk"
            git config --global user.name "thanhz"
            git clone https://github.com/$repo.git
            cd $(basename $repo)
            git checkout $default_branch
            git pull origin $default_branch
            git checkout develop
            git rebase $default_branch
            git push origin develop
            cd ..
          done  
        env:
            GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
      - name: Create Pull Request
        run: |
          for repo in ${{ steps.read-repos.outputs.repos }}; do
            default_branch=$(gh api /repos/$repo -q '.default_branch')
            develop=$(gh api /repos/$repo/commits/refs/heads/develop -q '.sha')
            main=$(gh api /repos/$repo/commits/refs/heads/$default_branch -q '.sha')

            if [[ $develop != $main ]]; then
                gh api /repos/$repo/pulls \
                  -f title="Scala Steward Updates" \
                  -f base=$default_branch \
                  -f head=develop
            else
                echo "There are no updates in $repo"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
